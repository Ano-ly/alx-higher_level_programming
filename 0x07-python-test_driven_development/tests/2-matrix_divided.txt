>>> matrix_divided = __import__("2-matrix_divided").matrix_divided
>>> print(matrix_divided([], 5))
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> print(matrix_divided([[2, 3], [4,5]]))
Traceback (most recent call last):
	...
TypeError: matrix_divided() missing 1 required positional argument: 'div'
>>> print(matrix_divided([[2, 3], [4,5]], 0))
Traceback (most recent call last):
	...
ZeroDivisionError: division by zero
>>> print(matrix_divided([[2, 3, 4], [2, 3]], 4))
Traceback (most recent call last):
	...
TypeError: Each row of the matrix must have the same size
>>> print(matrix_divided([[1, 2, 3], [3, 6, 7]], 4))
[[0.25, 0.5, 0.75], [0.75, 1.5, 1.75]]
>>> print(matrix_divided([[99],[1e345564]], 4))
[[24.75], [inf]]
>>> print(matrix_divided([[2],[3]], 1e32454324))
[[0.0], [0.0]]
>>> print(matrix_divided([[2]], 4))
[[0.5]]
>>> print(matrix_divided([2], 9))
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> print(matrix_divided([[3, "me"]], 4))
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> print(matrix_divided([[3, 4, 5], [3, 5, 6]], float("nan")))
[[nan, nan, nan], [nan, nan, nan]]
>>> print(matrix_divided(None, 4))
Traceback (most recent call last):
	...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> print(matrix_divided([[1, 2, 3], [3, 6, 7]], "4"))
Traceback (most recent call last):
	...
TypeError: div must be a number
>>> print(matrix_divided())
Traceback (most recent call last):
	...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
>>> print(matrix_divided([[1, 2, 3], [3, 6, float(inf/nan)]], 4))
Traceback (most recent call last):
	...
NameError: name 'inf' is not defined
>>> print(matrix_divided([[1, 2, 3], [3, 6, float(inf/nan)]], float(inf/nan)))
Traceback (most recent call last):
	...
NameError: name 'inf' is not defined
